import java.awt.Color;
import java.util.List;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Document;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Simon
 */
public class Vmesnik extends javax.swing.JFrame {

    /**
     * Creates new form Vmesnik
     */
    public Vmesnik() {
        initComponents();
        initStyle();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        izbiraDatotek = new javax.swing.JFileChooser();
        izbiraBarv = new javax.swing.JColorChooser();
        plosca = new javax.swing.JPanel();
        oznakaIsk = new javax.swing.JLabel();
        vnosIskanje = new javax.swing.JTextField();
        drsniskiPanel = new javax.swing.JScrollPane();
        vnosBesedilo = new javax.swing.JTextPane();
        oznakaSta = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        gumbOdp = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        gumnShr = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        gumbNaj = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        gumbPap = new javax.swing.JButton();
        vrsticniMeni = new javax.swing.JMenuBar();
        meniDat = new javax.swing.JMenu();
        izbiraOdp = new javax.swing.JMenuItem();
        izbiraShr = new javax.swing.JMenuItem();
        izbiraIzh = new javax.swing.JMenuItem();
        meniIsk = new javax.swing.JMenu();
        izbiraNaj = new javax.swing.JMenuItem();
        izbiraPap = new javax.swing.JMenuItem();
        meniBarv = new javax.swing.JMenu();
        izbiraBes = new javax.swing.JMenuItem();
        izbiraOza = new javax.swing.JMenuItem();
        meniPom = new javax.swing.JMenu();
        izbiraAvt = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        oznakaIsk.setText("Iskanje: ");

        vnosBesedilo.setText("Lorem ipsum dolor sit amet, consul tempor consequat mel te. Et zril sadipscing vim, legere appetere in sea. Facilis definitionem nam an, sit quaestio rationibus cu. Ex ius persecuti vituperata, sumo diam facilisis eum ea, mea utamur equidem accommodare eu.\n\nEst ei ignota utamur similique. Qui prompta singulis ad, ei has elitr homero corpora, eum nemore tamquam comprehensam in. At iudicabit democritum dissentias eam. Ad docendi tibique nec.\n\nAd eum velit saepe doctus. Eos salutatus splendide an, est an vide dolorum tibique. No simul corrumpit has, vim id labores tincidunt. Est ad rationibus constituam.\n\nEt omnesque invenire disputando est. Case ubique ut vel, ea augue putent persecuti mei, per evertitur prodesset eu. Sit te laoreet accumsan. Hinc vulputate eu mea, ei vim rebum patrioque dignissim, an omnis bonorum usu.\n\nNec an affert accusata, eros habeo cum an. Has graecis imperdiet id. Nam quem sadipscing et. Sit volumus constituam ex, sed sonet officiis ex. Vocent phaedrum mediocrem at vix, an eros veniam vulputate vim. Modus blandit percipit nec ne, intellegat expetendis et vim, vim eius ridens inciderint cu.\n\nVel ex illud vivendo repudiandae. Posse ceteros id pri. Has ex utinam eruditi accusamus. Eam veritus ceteros deseruisse an. No stet probo senserit vim, qui id iriure assueverit.\n\nMunere scriptorem vel eu, reque mandamus postulant duo ne. An quo vidit clita, mea ne omnium nusquam. Scaevola probatus id usu. In nam affert vocibus fuisset, nihil dolor euripidis vel te. Luptatum scribentur reprehendunt eum ne.\n\nUt vel etiam aperiam liberavisse, altera essent consectetuer nam te, te his quidam antiopam. Te sit bonorum erroribus, minim nostro fuisset duo cu. Eu eum facete consectetuer. An pro tota adolescens, dicit option eam ex. An liber maluisset mel, ex nonumes conceptam sit. Sea delenit habemus in.\n\nAd augue dignissim eos, summo tation epicuri ex his, sit putant mentitum et. Et has aperiri forensibus temporibus, exerci petentium reprehendunt cu cum, electram convenire vix id. Ut iriure docendi urbanitas eum. Iusto percipitur no mea, eum in minim fabulas noluisse. Nibh timeam oporteat ut sea. Et mea amet quando salutatus, quem eirmod pertinacia pri eu.\n\nEam tale graece pertinacia id, id qui legendos voluptaria repudiandae, copiosae vivendum deterruisset quo eu. Posse tincidunt pri ad, oportere tractatos has te. Pro erat nominati cu. Pro vitae suavitate in. Mei quis diam moderatius ne, mel iriure civibus eu, eu viris deserunt nam.");
        drsniskiPanel.setViewportView(vnosBesedilo);

        oznakaSta.setText(" ");

        jToolBar1.setRollover(true);

        gumbOdp.setText("Odpri");
        gumbOdp.setFocusable(false);
        gumbOdp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gumbOdp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gumbOdp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniOdpriShrani(evt);
            }
        });
        jToolBar1.add(gumbOdp);
        jToolBar1.add(jSeparator1);

        gumnShr.setText("Shrani");
        gumnShr.setFocusable(false);
        gumnShr.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gumnShr.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gumnShr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniOdpriShrani(evt);
            }
        });
        jToolBar1.add(gumnShr);
        jToolBar1.add(jSeparator2);

        gumbNaj.setText("Najdi vse");
        gumbNaj.setFocusable(false);
        gumbNaj.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gumbNaj.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gumbNaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniNajdiVsePapajscina(evt);
            }
        });
        jToolBar1.add(gumbNaj);
        jToolBar1.add(jSeparator3);

        gumbPap.setText("Papajščina");
        gumbPap.setFocusable(false);
        gumbPap.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gumbPap.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gumbPap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniNajdiVsePapajscina(evt);
            }
        });
        jToolBar1.add(gumbPap);

        javax.swing.GroupLayout ploscaLayout = new javax.swing.GroupLayout(plosca);
        plosca.setLayout(ploscaLayout);
        ploscaLayout.setHorizontalGroup(
            ploscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ploscaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ploscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drsniskiPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(ploscaLayout.createSequentialGroup()
                        .addComponent(oznakaIsk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vnosIskanje))
                    .addGroup(ploscaLayout.createSequentialGroup()
                        .addComponent(oznakaSta, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(ploscaLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ploscaLayout.setVerticalGroup(
            ploscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ploscaLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ploscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oznakaIsk)
                    .addComponent(vnosIskanje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drsniskiPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oznakaSta))
        );

        getContentPane().add(plosca, java.awt.BorderLayout.CENTER);

        meniDat.setMnemonic('D');
        meniDat.setText("Datoteka");

        izbiraOdp.setMnemonic('O');
        izbiraOdp.setText("Odpri");
        izbiraOdp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniOdpriShrani(evt);
            }
        });
        meniDat.add(izbiraOdp);

        izbiraShr.setMnemonic('S');
        izbiraShr.setText("Shrani");
        izbiraShr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniOdpriShrani(evt);
            }
        });
        meniDat.add(izbiraShr);

        izbiraIzh.setMnemonic('I');
        izbiraIzh.setText("Izhod");
        izbiraIzh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniIzhod(evt);
            }
        });
        meniDat.add(izbiraIzh);

        vrsticniMeni.add(meniDat);

        meniIsk.setMnemonic('I');
        meniIsk.setText("Iskanje");

        izbiraNaj.setMnemonic('N');
        izbiraNaj.setText("Najdi vse");
        izbiraNaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniNajdiVsePapajscina(evt);
            }
        });
        meniIsk.add(izbiraNaj);

        izbiraPap.setMnemonic('P');
        izbiraPap.setText("Papajščina");
        meniIsk.add(izbiraPap);

        vrsticniMeni.add(meniIsk);

        meniBarv.setMnemonic('B');
        meniBarv.setText("Barve");

        izbiraBes.setMnemonic('B');
        izbiraBes.setText("Besedilo");
        izbiraBes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniBarva(evt);
            }
        });
        meniBarv.add(izbiraBes);

        izbiraOza.setMnemonic('O');
        izbiraOza.setText("Ozadje");
        izbiraOza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniBarva(evt);
            }
        });
        meniBarv.add(izbiraOza);

        vrsticniMeni.add(meniBarv);

        meniPom.setMnemonic('P');
        meniPom.setText("Pomoč");

        izbiraAvt.setMnemonic('A');
        izbiraAvt.setText("Avtor");
        izbiraAvt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniAvtor(evt);
            }
        });
        meniPom.add(izbiraAvt);

        vrsticniMeni.add(meniPom);

        setJMenuBar(vrsticniMeni);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void meniOdpriShrani(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniOdpriShrani
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Textovne datoteke", "txt");
        izbiraDatotek.setFileFilter(filter);
        if(evt.getActionCommand().equals("Odpri")){
            izbiraDatotek.setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);
            int vrnjenaVrednost = izbiraDatotek.showDialog(plosca, "Odpri");
            if(vrnjenaVrednost == javax.swing.JFileChooser.APPROVE_OPTION){
                File datoteka = izbiraDatotek.getSelectedFile();
                try {
                    Scanner sc = new Scanner(datoteka);
                    vnosBesedilo.setText("");
                    odprtaDatoteka = datoteka;
                    while(sc.hasNextLine()){
                        vnosBesedilo.setText(vnosBesedilo.getText()+sc.nextLine()+"\n");
                    }
                    oznakaSta.setText("Odpiranje datoteke \""+datoteka.getName()+"\" uspešno, velikost: "+datoteka.length()+"B");
                    sc.close();
                } catch (FileNotFoundException ex) {
                    oznakaSta.setText("Odpiranje neuspešno: Datoteka \""+datoteka.getName()+"\" ne obstaja");
                }
            }
        }else if(evt.getActionCommand().equals("Shrani")){
            izbiraDatotek.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
            if(odprtaDatoteka != null) izbiraDatotek.setSelectedFile(odprtaDatoteka);
            int vrnjenaVrednost = izbiraDatotek.showDialog(plosca, "Shrani");
            if(vrnjenaVrednost == javax.swing.JFileChooser.APPROVE_OPTION){
                File datoteka = izbiraDatotek.getSelectedFile();
                if(datoteka.exists()){
                    try {
                        Files.delete(datoteka.toPath());
                    } catch (IOException ex) {
                        System.out.println("not deleted");
                        ex.printStackTrace();
                    }
                }
                try {
                    Files.createFile(datoteka.toPath());
                } catch (IOException ex) {
                    System.out.println("Not created");
                    ex.printStackTrace();
                }
                try {
                    PrintWriter pw = new PrintWriter(datoteka);
                    pw.write(vnosBesedilo.getText());
                    pw.close();
                } catch (FileNotFoundException ex) {
                    System.out.println("Not written");
                    ex.printStackTrace();
                }
                oznakaSta.setText("Shranjevanje uspešno v datoteko \""+datoteka.getName()+"\", velikost: "+datoteka.length()+"B");
            }
        }
    }//GEN-LAST:event_meniOdpriShrani

    private void meniIzhod(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniIzhod
        System.exit(0);
    }//GEN-LAST:event_meniIzhod
    
    private void initStyle(){
        Style najden = vnosBesedilo.addStyle("najden", null);
        StyleConstants.setBackground(najden, Color.YELLOW);
        StyleConstants.setForeground(najden, barvaBesedila);
    }
    
    private String papaniraj(String vnos){
        char[] arr = vnos.toCharArray();
        char[] samoglasniki = "aeiouAEIOU".toCharArray();
        String out = "";
        char prejsnjiSamoglasnik = 'a';
        for(char c : arr){
           out+= c;
           for(char samoglasnik : samoglasniki){
               if(c == samoglasnik){
                   out+= "p" + prejsnjiSamoglasnik;
                   prejsnjiSamoglasnik = Character.toLowerCase(c);
                   break;
               }
           }
        }
        return out;
    }
    
    private void meniNajdiVsePapajscina(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniNajdiVsePapajscina
        DefaultStyledDocument dok = (DefaultStyledDocument)vnosBesedilo.getStyledDocument();
        String iskano = vnosIskanje.getText();
        if(iskano.equals("")) return;
        int ponovitev = 0;
        String besedilo = "";
        try {
            besedilo = dok.getText(0, dok.getLength());
        } catch (BadLocationException ex) {
            Logger.getLogger(Vmesnik.class.getName()).log(Level.SEVERE, null, ex);
        }
        int dolzina = iskano.length();
        List<Integer> intList = new ArrayList<Integer>();
        int index = besedilo.indexOf(iskano);
        while(index >= 0){
            intList.add(index);
            index = besedilo.indexOf(iskano, index+1);
            ponovitev++;
        }
        if(evt.getActionCommand().equals("Najdi vse")){
            for(Integer i : intList){
                dok.setCharacterAttributes(i, dolzina, vnosBesedilo.getStyle("najden"), true);
            }
            oznakaSta.setText("Iskana beseda: "+iskano+" Št. ponovitev: "+ponovitev);
        }
        if(evt.getActionCommand().equals("Papajščina")){
            String replaced = vnosBesedilo.getText().replace(iskano, papaniraj(iskano));
            vnosBesedilo.setText(replaced);
            int razlika = papaniraj(iskano).length() - iskano.length();
            List<Integer> newList = new ArrayList<Integer>();
            for(int i = 0; i < intList.size(); i++){
                newList.add(intList.get(i)+razlika*i);
            }
            for(Integer i : newList){
                dok.setCharacterAttributes(i, papaniraj(iskano).length(), vnosBesedilo.getStyle("najden"), true);
            }
            oznakaSta.setText("Beseda spremenjena v papajščino: "+iskano+" Št. ponovitev: "+ponovitev);
        }
    }//GEN-LAST:event_meniNajdiVsePapajscina

    private void meniBarva(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniBarva
        Color barva = JColorChooser.showDialog(null, "Izberi barvo "+evt.getActionCommand(), Color.BLACK);
        int start = vnosBesedilo.getSelectionStart();
        int end = vnosBesedilo.getSelectionEnd();
        if(start == end) return;
        if(evt.getActionCommand().equals("Besedilo")){
            barvaBesedila = barva;
            barvaOzadja = Color.WHITE;
        }else if(evt.getActionCommand().equals("Ozadje")){
            barvaOzadja = barva;
            barvaBesedila = vnosBesedilo.getSelectedTextColor();
        }
        Style temp = vnosBesedilo.addStyle("barva"+stevecBarv++, null);
        StyleConstants.setBackground(temp, barvaOzadja);
        StyleConstants.setForeground(temp, barvaBesedila);
        vnosBesedilo.getStyledDocument().setCharacterAttributes(start, end-start, temp, true);
    }//GEN-LAST:event_meniBarva

    private void meniAvtor(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniAvtor
        oznakaSta.setText("Avtor: Simon Kovač (63140121)");
    }//GEN-LAST:event_meniAvtor

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vmesnik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vmesnik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vmesnik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vmesnik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vmesnik().setVisible(true);
            }
        });
    }
    private File odprtaDatoteka;
    private Color barvaBesedila = Color.BLACK;
    private Color barvaOzadja = Color.WHITE;
    private int stevecBarv = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane drsniskiPanel;
    private javax.swing.JButton gumbNaj;
    private javax.swing.JButton gumbOdp;
    private javax.swing.JButton gumbPap;
    private javax.swing.JButton gumnShr;
    private javax.swing.JMenuItem izbiraAvt;
    private javax.swing.JColorChooser izbiraBarv;
    private javax.swing.JMenuItem izbiraBes;
    private javax.swing.JFileChooser izbiraDatotek;
    private javax.swing.JMenuItem izbiraIzh;
    private javax.swing.JMenuItem izbiraNaj;
    private javax.swing.JMenuItem izbiraOdp;
    private javax.swing.JMenuItem izbiraOza;
    private javax.swing.JMenuItem izbiraPap;
    private javax.swing.JMenuItem izbiraShr;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenu meniBarv;
    private javax.swing.JMenu meniDat;
    private javax.swing.JMenu meniIsk;
    private javax.swing.JMenu meniPom;
    private javax.swing.JLabel oznakaIsk;
    private javax.swing.JLabel oznakaSta;
    private javax.swing.JPanel plosca;
    private javax.swing.JTextPane vnosBesedilo;
    private javax.swing.JTextField vnosIskanje;
    private javax.swing.JMenuBar vrsticniMeni;
    // End of variables declaration//GEN-END:variables
}
